name: Testing

on:
  push:

  pull_request_target:
    branches:
      - canary

permissions:
  checks: write
  contents: read

# CI false so we don't treat warnings as failures
env:
  CI: false
  FORCE_COLOR: 2
  HUSKY_SKIP_INSTALL: 1
  NEXT_TELEMETRY_DISABLED: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request_target' && github.head_ref || github.ref }}
  cancel-in-progress: true


jobs:
  lint:
    name: Run action
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']

    steps:
      - name: Check out repository (push)
        if: ${{ github.event_name == 'push' }}
        uses: actions/checkout@v2

      - name: Check out repository (pull_request_target)
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          always-auth: true
          registry-url: https://registry.npmjs.org
          cache: 'yarn'

      - name: Install npm dependencies
        run: |
         yarn install --frozen-lockfile
         echo "::set-output name=install::nodejs"

      - name: Run build
        run: NODE_ENV=production npx next build
        id: build

      - name: Run test
        run: yarn test:ci
        id: test
